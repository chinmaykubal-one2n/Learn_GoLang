{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server Student API server.",
        "title": "Swagger Student API",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/api/students": {
            "get": {
                "description": "Get a list of all students",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students"
                ],
                "summary": "List all students",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Student"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new student with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students"
                ],
                "summary": "Create a new student",
                "parameters": [
                    {
                        "description": "Student details",
                        "name": "student",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Student"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Student"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/students/{id}": {
            "get": {
                "description": "Get a student's details by their ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students"
                ],
                "summary": "Get a student by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Student ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Student"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update a student's details by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students"
                ],
                "summary": "Update a student",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Student ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated student details",
                        "name": "student",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Student"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Student"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a student by their ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students"
                ],
                "summary": "Delete a student",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Student ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/healthz": {
            "get": {
                "description": "Get the health status of the API",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Register a new teacher with the provided credentials",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register a new teacher",
                "parameters": [
                    {
                        "description": "Teacher registration details",
                        "name": "teacher",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Teacher"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully registered teacher",
                        "schema": {
                            "$ref": "#/definitions/model.Teacher"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Student": {
            "description": "Student information including personal details",
            "type": "object",
            "required": [
                "age",
                "email",
                "name"
            ],
            "properties": {
                "age": {
                    "description": "Age of the student (must be between 1 and 120)\n@minimum 1\n@maximum 120\n@example 18\n@required true",
                    "type": "integer",
                    "maximum": 120,
                    "minimum": 1
                },
                "email": {
                    "description": "Email address of the student\n@example \"john.smith@example.com\"\n@pattern ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$\n@required true",
                    "type": "string"
                },
                "id": {
                    "description": "Unique identifier of the student\n@example \"550e8400-e29b-41d4-a716-446655440000\"",
                    "type": "string"
                },
                "name": {
                    "description": "Full name of the student\n@example \"John Smith\"\n@required true",
                    "type": "string"
                }
            }
        },
        "model.Teacher": {
            "description": "Teacher account information for authentication and authorization",
            "type": "object",
            "required": [
                "email",
                "password",
                "role",
                "username"
            ],
            "properties": {
                "email": {
                    "description": "Email address of the teacher\n@example \"john.doe@school.com\"\n@required\n@pattern ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
                    "type": "string"
                },
                "id": {
                    "description": "Unique identifier for the teacher\n@example \"123e4567-e89b-12d3-a456-426614174000\"",
                    "type": "string"
                },
                "password": {
                    "description": "Password for authentication (will be hashed)\n@example \"securePassword123\"\n@required",
                    "type": "string"
                },
                "role": {
                    "description": "Role determines the teacher's permissions (admin or regular)\n@example \"admin\"\n@enum [\"admin\",\"regular\"]\n@required",
                    "type": "string"
                },
                "username": {
                    "description": "Username for login\n@example \"john.doe\"\n@required",
                    "type": "string"
                }
            }
        }
    }
}